AWSTemplateFormatVersion: 2010-09-09
Description: Part 3 - Setup a CodePipeline with CloudFormation

Parameters:
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name

  GitHubRepo:
    Type: String

  GitHubBranch:
    Type: String
    Default: master

  GitHubToken:
    Type: String
    NoEcho: true

  GitHubUser:
    Type: String

Resources:

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: "logs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - logs:CreateLogGroup
                      - logs:CreateLogStream
                      - logs:PutLogEvents
                      - ecr:GetAuthorizationToken
                      - ssm:GetParameters
                  Resource: "*"
        # - PolicyName: "ecr"
        #   PolicyDocument:
        #     Version: "2012-10-17"
        #     Statement:
        #         -
        #           Effect: "Allow"
        #           Action:
        #               - ecr:GetDownloadUrlForLayer
        #               - ecr:BatchGetImage
        #               - ecr:BatchCheckLayerAvailability
        #               - ecr:PutImage
        #               - ecr:InitiateLayerUpload
        #               - ecr:UploadLayerPart
        #               - ecr:CompleteLayerUpload
        #           Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${Repository}
        - PolicyName: "S3"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
                -
                  Effect: "Allow"
                  Action:
                      - s3:GetObject
                      - s3:PutObject
                      - s3:GetObjectVersion
                  Resource: !Sub arn:aws:s3:::${ArtifactBucket}/*

  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - !Sub arn:aws:s3:::${ArtifactBucket}/*
                  - !Sub arn:aws:s3:::${ArtifactBucket}
                Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
              - Resource: "*"
                Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - iam:PassRole
              # - Resource: !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:retaildemostore-src'
              #   Effect: Allow
              #   Action:
              #     - "codecommit:GetBranch"
              #     - "codecommit:GetCommit"
              #     - "codecommit:UploadArchive"
              #     - "codecommit:GetUploadArchiveStatus"
              #     - "codecommit:CancelUploadArchive"
              # - Resource: '*'
              #   Effect: Allow
              #   Action:
              #     - ecs:List*
              #     - ecs:Describe*
              #     - ecs:RegisterTaskDefinition
              # - Resource: !Sub 'arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/${ClusterName}/${FargateServiceName}'
              #   Effect: Allow
              #   Action:
              #     - ecs:UpdateService

  ArtifactBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: app/buildspec.yml
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/docker:17.09.0
        Type: LINUX_CONTAINER
      Name: !Ref AWS::StackName
      ServiceRole: !Ref CodeBuildServiceRole

  PipelineGitHub:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: App
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: App
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: App
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1
        # - Name: Deploy
        #   Actions:
        #     - Name: Deploy
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Version: '1'
        #         Provider: ECS
        #       Configuration:
        #         ClusterName: !Ref ClusterName
        #         ServiceName: !Ref FargateServiceName
        #         FileName: images.json
        #       InputArtifacts:
        #         - Name: BuildOutput
        #       RunOrder: 1

Outputs:
  PipelineForGitHubUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${PipelineGitHub}

